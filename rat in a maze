#include<bits/stdc++.h>
using namespace std;
bool ratInMaze(char maze[][10],int soln[][10],int x,int y,int m,int n){
    //base case
    if((x==m) && (y==n)){
        soln[n][m]=1;
        //print the path
        for (int i = 0; i <= m; i++)
        {
            for (int j = 0; j <= n; j++)
            {
                cout<<soln[i][j]<<" ";
            }
            cout<<endl;
        }
        cout<<endl<<endl;

        return true;
    }
    //recursive
    if(x>m||y>n){
        return false;
    }
    if(maze[x][y]=='X'){
        return false;
    }
    //assume that solution exist through current cell
    soln[x][y]=1;
    bool rightsuccess=ratInMaze(maze,soln,x,y+1,m,n);
    bool downsuccess =ratInMaze(maze,soln,x+1,y,m,n);
    //backtracking
    soln[x][y]=0;
    if(rightsuccess||downsuccess){return true;}
    return false;
}
int main()
{
    char maze[10][10]={"0000","00X0","000X","0X00"};
    int soln[10][10]={0};
    bool ans=ratInMaze(maze,soln,0,0,3,3);
    if(!ans){cout<<"there does not exist any path!";}
    return 0;
}
